# Source files. mod_auth_mellon.c must be the first file.
SRC=mod_auth_mellon.c \
	auth_mellon_cache.c \
	auth_mellon_config.c \
	auth_mellon_cookie.c \
	auth_mellon_diagnostics.c \
	auth_mellon_handler.c \
	auth_mellon_util.c \
	auth_mellon_session.c \
	auth_mellon_httpclient.c

# Documentation files
USER_GUIDE_FILES=\
	doc/user_guide/mellon_user_guide.adoc \
	doc/user_guide/Guardfile \
	doc/user_guide/README \
	doc/user_guide/images/chrome_SAML_Chrome_Panel.png \
	doc/user_guide/images/chrome_SAML_Chrome_Panel.svg \
	doc/user_guide/images/saml-tracer.png \
	doc/user_guide/images/saml-tracer.svg \
	doc/user_guide/images/saml-web-sso.svg

TEST_SRC=test/stub.c \
	test/test_util.c \
	$(NULL)

# Files to include when making a .tar.gz-file for distribution
DISTFILES=$(SRC) \
	auth_mellon.h \
	auth_mellon_compat.h \
	lasso_compat.h \
	config.h.in \
	configure \
	configure.ac \
	Makefile.in \
	autogen.sh \
	README.md \
	ECP.rst \
	COPYING \
	NEWS \
	mellon_create_metadata.sh \
	$(TEST_SRC) \
	$(USER_GUIDE_FILES)

all:	mod_auth_mellon.la

mod_auth_mellon.la: $(SRC) auth_mellon.h auth_mellon_compat.h
	@APXS2@ -Wc,"-std=c99 @MELLON_CFLAGS@ @OPENSSL_CFLAGS@ @LASSO_CFLAGS@ @CURL_CFLAGS@ @GLIB_CFLAGS@ @CFLAGS@" -Wl,"@OPENSSL_LIBS@ @LASSO_LIBS@ @CURL_LIBS@ @GLIB_LIBS@" -Wc,-Wall -Wc,-g -c $(SRC)

test-util: test/test_util.c test/stub.c mod_auth_mellon.la
	@APXS2@ -Wc,"-std=c99 @MELLON_CFLAGS@ @OPENSSL_CFLAGS@ @LASSO_CFLAGS@ @CURL_CFLAGS@ @GLIB_CFLAGS@ @CFLAGS@" -I. -Wl,"@OPENSSL_LIBS@ @LASSO_LIBS@ @CURL_LIBS@ @GLIB_LIBS@ -lgobject-2.0" -Wc,-Wall -Wc,-g -c -o $@ $< test/stub.c $(SRC:.c=.lo) @APR_LIBS@

check: test-util
	./test-util

# Building configure (for distribution)
configure:	configure.ac
	./autogen.sh

@NAMEVER@.tar.gz:	 $(DISTFILES)
	tar -c --transform="s#^#@NAMEVER@/#" -vzf $@ $(DISTFILES)


.PHONY:	install
install: mod_auth_mellon.la
	@APXS2@ -i -n auth_mellon mod_auth_mellon.la

.PHONY: distfile
distfile:	@NAMEVER@.tar.gz

.PHONY:	clean
clean:
	rm -f mod_auth_mellon.la
	rm -f test-util
	rm -f $(SRC:%.c=%.o)
	rm -f $(SRC:%.c=%.lo)
	rm -f $(SRC:%.c=%.slo)
	rm -f $(TEST_SRC:%.c=%.slo)
	rm -rf .libs/

.PHONY:	distclean
distclean:	clean
	rm -f Makefile config.log config.status @NAMEVER@.tar.gz *~ \
	build-stamp config.guess config.sub
	rm -rf debian/mod-auth-mellon
	rm -f debian/files

.PHONY: fullclean
fullclean:	distclean
	rm -f configure aclocal.m4
